binlog基本认识
MySQL的二进制日志可以说是MySQL最重要的日志了，它记录了所有的DDL和DML(除了数据查询语句)语句，
以事件形式记录，还包含语句所执行的消耗的时间，MySQL的二进制日志是事务安全型的。
 
一般来说开启二进制日志大概会有1%的性能损耗(参见MySQL官方中文手册 5.1.24版)。二进制有两个最重要的使用场景: 
1.MySQL Replication在Master端开启binlog，Mster把它的二进制日志传递给slaves来达到master-slave数据一致的目的。 
2.自然就是数据恢复了，通过使用mysqlbinlog工具来使恢复数据。
    
二进制日志包括两类文件：二进制日志索引文件（文件名后缀为.index）用于记录所有的二进制文件，
                        二进制日志文件（文件名后缀为.00000*）记录数据库所有的DDL和DML(除了数据查询语句)语句事件。 
						
查看mysql二进制日志文件需要使用mysqlbinlog命令
从binlog中恢复数据
mysqlbinlog mysql-bin.0000xx | mysql -u用户名 -p密码 数据库名

常用选项：
 --start-position=953                   起始pos点
 --stop-position=1437                   结束pos点
 --start-datetime="2013-11-29 13:18:54" 起始时间点
 --stop-datetime="2013-11-29 13:21:53"  结束时间点
 --database=zyyshop                     指定只恢复zyyshop数据库(一台主机上往往有多个数据库，只限本地log日志)

主备节点直接同步binlog的方式
我们假设主库已经开启了binlog，并正常的记录binlog。
首先从库启动I/O线程，跟主库建立客户端连接。
主库启动binlog dump线程，读取主库上的binlog event发送给从库的I/O线程，I/O线程获取到binlog event之后将其写入到自己的Relay Log中。
然后从库启动SQL线程，将Relay中的数据进行重放，完成从库的数据更新。
总结来说，主库上只会有一个线程，而从库上则会有两个线程。
relay log的核心就是为了支持备库可以异步的回放binlog。
